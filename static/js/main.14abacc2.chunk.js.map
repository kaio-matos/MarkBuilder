{"version":3,"sources":["components/StateButton/index.tsx","components/Header/index.tsx","components/Input/index.tsx","components/Output/index.tsx","App.tsx","index.tsx"],"names":["StateButton","state","setState","className","onClick","Header","darkState","setDarkState","Input","setText","spellCheck","onChange","e","currentTarget","value","Output","text","console","log","App","useState","activeDark","setActiveDark","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gUAOe,SAASA,EAAT,GAA6D,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAC3C,OACE,qBAAKC,UAAWF,EAAQ,qBAAuB,GAA/C,SACE,yBACEG,QAAS,WACPF,GAAUD,IAEZE,UAAU,cAJZ,UAME,qBAAKA,UAAU,WACf,qBAAKA,UAAU,aACf,qBAAKA,UAAU,gB,MCVR,SAASE,EAAT,GAA2D,IAAzCC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,aAC1C,OACE,mCACE,wBACA,8BACE,+CAEF,8BACE,cAAC,EAAD,CAAaN,MAAOK,EAAWJ,SAAUK,S,MCVlC,SAASC,EAAT,GAA6C,IAA5BC,EAA2B,EAA3BA,QAC9B,OACE,qBAAKN,UAAU,kBAAf,SACE,0BACEO,WAAW,QACXC,SAAU,SAACC,GACTH,EAAQG,EAAEC,cAAcC,Y,uBCJnB,SAASC,EAAT,GAA4C,IAA1BC,EAAyB,EAAzBA,KAE/B,OADAC,QAAQC,IAAIF,GAEV,qBAAKb,UAAU,mBAAf,SACE,cAAC,IAAD,UAAWa,MCSFG,MAff,WACE,MAAwBC,mBAAS,IAAjC,mBAAOJ,EAAP,KAAaP,EAAb,KACA,EAAoCW,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,OACE,sBAAKnB,UAAS,cAASkB,EAAa,YAAc,IAAlD,UACE,cAAChB,EAAD,CAAQC,UAAWe,EAAYd,aAAce,IAC7C,sBAAKnB,UAAU,YAAf,UACE,cAACK,EAAD,CAAOC,QAASA,IAChB,cAACM,EAAD,CAAQC,KAAMA,WCVtBO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.14abacc2.chunk.js","sourcesContent":["import \"./index.css\";\n\ntype StateButtonProps = {\n  state: boolean;\n  setState: (value: boolean) => void;\n};\n\nexport default function StateButton({ state, setState }: StateButtonProps) {\n  return (\n    <div className={state ? \"stateButton_active\" : \"\"}>\n      <button\n        onClick={() => {\n          setState(!state);\n        }}\n        className=\"stateButton\"\n      >\n        <div className=\"circle\"></div>\n        <div className=\"turn Off\"></div>\n        <div className=\"circle\"></div>\n      </button>\n    </div>\n  );\n}\n","import StateButton from \"../StateButton\";\nimport \"./style.css\";\n\ntype HeaderProps = {\n  darkState: boolean;\n  setDarkState: (value: boolean) => void;\n};\n\nexport default function Header({ darkState, setDarkState }: HeaderProps) {\n  return (\n    <header>\n      <div></div>\n      <div>\n        <h1>MarkBuilder</h1>\n      </div>\n      <div>\n        <StateButton state={darkState} setState={setDarkState} />\n      </div>\n    </header>\n  );\n}\n","import \"./style.css\";\n\ntype InputPropsType = {\n  setText: (value: string) => void;\n};\n\nexport default function Input({ setText }: InputPropsType) {\n  return (\n    <div className=\"input_container\">\n      <textarea\n        spellCheck=\"false\"\n        onChange={(e) => {\n          setText(e.currentTarget.value);\n        }}\n      ></textarea>\n    </div>\n  );\n}\n","import Markdown from \"markdown-to-jsx\";\nimport \"./style.css\";\nimport \"./markdown.css\";\n\ntype OutputPropsType = {\n  text: string;\n};\n\nexport default function Output({ text }: OutputPropsType) {\n  console.log(text);\n  return (\n    <div className=\"output_container\">\n      <Markdown>{text}</Markdown>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Input from \"./components/Input\";\nimport Output from \"./components/Output\";\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [activeDark, setActiveDark] = useState(true);\n\n  return (\n    <div className={`App ${activeDark ? \"dark_mode\" : \"\"}`}>\n      <Header darkState={activeDark} setDarkState={setActiveDark} />\n      <div className=\"container\">\n        <Input setText={setText} />\n        <Output text={text} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}