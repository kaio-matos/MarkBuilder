{"version":3,"sources":["components/StateButton/index.tsx","components/Header/index.tsx","components/Input/index.tsx","components/Output/index.tsx","App.tsx","initialValue.ts","index.tsx"],"names":["StateButton","state","setState","className","onClick","Header","darkState","setDarkState","Input","text","setText","spellCheck","defaultValue","onChange","e","currentTarget","value","Output","App","useState","activeDark","setActiveDark","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAOe,SAASA,EAAT,GAA6D,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAC3C,OACE,qBAAKC,UAAWF,EAAQ,qBAAuB,GAA/C,SACE,yBACEG,QAAS,WACPF,GAAUD,IAEZE,UAAU,cAJZ,UAME,qBAAKA,UAAU,WACf,qBAAKA,UAAU,aACf,qBAAKA,UAAU,gB,MCVR,SAASE,EAAT,GAA2D,IAAzCC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,aAC1C,OACE,mCACE,wBACA,8BACE,+CAEF,8BACE,cAAC,EAAD,CAAaN,MAAOK,EAAWJ,SAAUK,S,MCTlC,SAASC,EAAT,GAAmD,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QACpC,OACE,qBAAKP,UAAU,kBAAf,SACE,0BACEQ,WAAW,QACXC,aAAcH,EACdI,SAAU,SAACC,GACTJ,EAAQI,EAAEC,cAAcC,Y,uBCNnB,SAASC,EAAT,GAA4C,IAA1BR,EAAyB,EAAzBA,KAC/B,OACE,qBAAKN,UAAU,mBAAf,SACE,cAAC,IAAD,UAAWM,M,MCeFS,MAnBf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOV,EAAP,KAAaC,EAAb,KACA,EAAoCS,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAMA,OAJAC,qBAAU,WACRZ,ECZW,uyCDaV,IAGD,sBAAKP,UAAS,cAASiB,EAAa,YAAc,IAAlD,UACE,cAACf,EAAD,CAAQC,UAAWc,EAAYb,aAAcc,IAC7C,sBAAKlB,UAAU,YAAf,UACE,cAACK,EAAD,CAAOC,KAAMA,EAAMC,QAASA,IAC5B,cAACO,EAAD,CAAQR,KAAMA,WEftBc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e372af7a.chunk.js","sourcesContent":["import \"./index.css\";\n\ntype StateButtonProps = {\n  state: boolean;\n  setState: (value: boolean) => void;\n};\n\nexport default function StateButton({ state, setState }: StateButtonProps) {\n  return (\n    <div className={state ? \"stateButton_active\" : \"\"}>\n      <button\n        onClick={() => {\n          setState(!state);\n        }}\n        className=\"stateButton\"\n      >\n        <div className=\"circle\"></div>\n        <div className=\"turn Off\"></div>\n        <div className=\"circle\"></div>\n      </button>\n    </div>\n  );\n}\n","import StateButton from \"../StateButton\";\nimport \"./style.css\";\n\ntype HeaderProps = {\n  darkState: boolean;\n  setDarkState: (value: boolean) => void;\n};\n\nexport default function Header({ darkState, setDarkState }: HeaderProps) {\n  return (\n    <header>\n      <div></div>\n      <div>\n        <h1>MarkBuilder</h1>\n      </div>\n      <div>\n        <StateButton state={darkState} setState={setDarkState} />\n      </div>\n    </header>\n  );\n}\n","import \"./style.css\";\n\ntype InputPropsType = {\n  text: string;\n  setText: (value: string) => void;\n};\n\nexport default function Input({ text, setText }: InputPropsType) {\n  return (\n    <div className=\"input_container\">\n      <textarea\n        spellCheck=\"false\"\n        defaultValue={text}\n        onChange={(e) => {\n          setText(e.currentTarget.value);\n        }}\n      ></textarea>\n    </div>\n  );\n}\n","import Markdown from \"markdown-to-jsx\";\nimport \"./style.css\";\nimport \"./markdown.css\";\n\ntype OutputPropsType = {\n  text: string;\n};\n\nexport default function Output({ text }: OutputPropsType) {\n  return (\n    <div className=\"output_container\">\n      <Markdown>{text}</Markdown>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport initialValue from \"./initialValue\";\nimport Header from \"./components/Header\";\nimport Input from \"./components/Input\";\nimport Output from \"./components/Output\";\nimport \"./App.css\";\n\nfunction App() {\n  const [text, setText] = useState(\"\");\n  const [activeDark, setActiveDark] = useState(true);\n\n  useEffect(() => {\n    setText(initialValue);\n  }, []);\n\n  return (\n    <div className={`App ${activeDark ? \"dark_mode\" : \"\"}`}>\n      <Header darkState={activeDark} setDarkState={setActiveDark} />\n      <div className=\"container\">\n        <Input text={text} setText={setText} />\n        <Output text={text} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export default `\n# Markdown syntax guide\n\n## Headers\n\n# This is a Heading h1\n## This is a Heading h2 \n###### This is a Heading h6\n\n## Emphasis\n\n*This text will be italic*  \n_This will also be italic_\n\n**This text will be bold**  \n__This will also be bold__\n\n_You **can** combine them_\n\n## Lists\n\n### Unordered\n\n* Item 1\n* Item 2\n* Item 2a\n* Item 2b\n\n### Ordered\n\n1. Item 1\n1. Item 2\n1. Item 3\n1. Item 3a\n1. Item 3b\n\n## Images\n\n![This is a alt text.](/image/sample.png \"This is a sample image.\")\n\n## Links\n\nYou may be using [MarkBuilder](https://kaio-matos.github.io/MarkBuilder/).\n\n## Blockquotes\n\n> Markdown is a lightweight markup language with plain-text-formatting syntax, created in 2004 by John Gruber with Aaron Swartz.\n>\n>> Markdown is often used to format readme files, for writing messages in online discussion forums, and to create rich text using a plain text editor.\n\n## Tables\n\n| Left columns  | Right columns |\n| ------------- |:-------------:|\n| left foo      | right foo     |\n| left bar      | right bar     |\n| left baz      | right baz     |\n\n## Blocks of code\n` +\n  \"```\" +\n  `let message = 'Hello world';\nalert(message);` +\n  \"```\" +\n  `\n## Inline code\n` +\n  \"This web site is using `markdown-to-jsx` and was inspired by [Markdown Live Preview](https://markdownlivepreview.com).\";\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}